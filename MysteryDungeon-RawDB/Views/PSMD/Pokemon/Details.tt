<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="MysteryDungeon_RawDB.Models.PSMD.PokemonDetailsViewModel" name="Model" #>
<h2><#= Model.Name #></h2>

<div>
    <h3>Details</h3>
    <dl class="dl-horizontal">
        <dt>
            ID (Decimal)
        </dt>

        <dd>
            <#= Model.ID #>
        </dd>

        <dt>
            ID (Hex, Big Endian)
        </dt>

        <dd>
            <#= Model.IDHexBigEndian #>
        </dd>

        <dt>
            ID (Hex, Little Endian)
        </dt>

        <dd>
            <#= Model.IDHexLittleEndian #>
        </dd>

        <dt>
           Dex Number
        </dt>

        <dd>
            <#= Model.DexNumber #>
        </dd>

        <dt>
            Category
        </dt>

        <dd>
            <#= Model.Category #>
        </dd>

        <dt>
            List Number 1
        </dt>

        <dd>
            <#= Model.ListNumber1 #>
        </dd>

        <dt>
            List Number 2
        </dt>

        <dd>
            <#= Model.ListNumber2 #>
        </dd>

        <dt>
            Evolves From
        </dt>

        <dd>
			<a href='{page="pkm-<#=Model.EvolvesFromEntryID #>"}'><#=Model.EvolvesFromName #></a>
        </dd>

        <dt>
            Ability 1
        </dt>

        <dd>
            <#= string.Format("<a href=\"../../abilities/{0}/\">{1}</a>", Model.Ability1ID, Model.Ability1) #>
        </dd>

        <dt>
            Ability 2
        </dt>

        <dd>
            <#= string.Format("<a href=\"../../abilities/{0}/\">{1}</a>", Model.Ability2ID, Model.Ability2) #>
        </dd>

        <dt>
            Hidden Ability
        </dt>

        <dd>
            <#= string.Format("<a href=\"../../abilities/{0}/\">{1}</a>", Model.AbilityHiddenID, Model.AbilityHidden) #>
        </dd>

        <dt>
            Type 1
        </dt>

        <dd>
            <#= Model.Type1 #>
        </dd>

        <dt>
            Type 2
        </dt>

        <dd>
            <#= Model.Type2 #>
        </dd>

        <dt>
            Is Mega Evolution
        </dt>

        <dd>
            <#= Model.IsMegaEvolution #>
        </dd>

        <dt>
            Min Evolve Level
        </dt>

        <dd>
            <#= Model.MinEvolveLevel #>
        </dd>

    </dl>
</div>
<div>
    <h3>Moves (Level Up)</h3>
    <table class="table">
        <tr>
            <th>Level</th>
            <th>Move</th>
        </tr>
        <# foreach (var item in Model.MovesLevelUp)
        { #>
            <tr>
                <td>
                    <#= item.Level.ToString() #>
                </td>
                <td>
                    <#= string.Format("<a href=\"../../moves/{0}/\">{1}</a>", item.MoveID, item.MoveName) #>
                </td>
            </tr>            
        <# } #>
    </table>
</div>
<div>
    <h3>Stats</h3>
    <table class="table">
        <tr>
            <th>Level</th>
            <th>Experience</th>
            <th>HP</th>
            <th>Attack</th>
            <th>Sp. Attack</th>
            <th>Defense</th>
            <th>Sp. Defense</th>
            <th>Speed</th>
        </tr>
        <# foreach (var item in Model.StatLevelUp)
        { #>
            <tr>
                <td>
                    <#= (item.Level + 1) #>
                </td>
                <td>
                    <#= item.Exp #>
                </td>
                <td>
                    <#= string.Format("{0} (+{1})", item.TotalHP, item.AddedHP) #>
                </td>
                <td>
                    <#= string.Format("{0} (+{1})", item.TotalAttack, item.AddedAttack) #>
                </td>
                <td>
                    <#= string.Format("{0} (+{1})", item.TotalSpAttack, item.AddedSpAttack) #>
                </td>
                <td>
                    <#= string.Format("{0} (+{1})", item.TotalDefense, item.AddedDefense) #>
                </td>
                <td>
                    <#= string.Format("{0} (+{1})", item.TotalSpDefense, item.AddedSpDefense) #>
                </td>
                <td>
                    <#= string.Format("{0} (+{1})", item.TotalSpeed, item.AddedSpeed) #>
                </td>
            </tr>
        <# } #>
    </table>
</div>
<p>
    <a href="..">Back to List</a>
</p>