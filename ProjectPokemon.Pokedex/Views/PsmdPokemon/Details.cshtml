@model ProjectPokemon.Pokedex.ViewModels.Psmd.PsmdPokemonDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<p>
    @Html.Raw(Model.GetCrossReferenceHtml())
</p>
<div>
    <h3>Details</h3>
    <div class="pkm-image-inner">
        <div data-role='commentContent' class='ipsType_normal ipsType_richText ipsContained' data-controller='core.front.core.lightboxedImages'>
            <p>
                <img class="ipsImage" src="@Model.GetGalleryImageUrl()" alt="@Model.Name Portrait" />
            </p>
        </div>
    </div>
    <a href="@Model.GetGalleryAlbumUrl()">See more images</a>
    <dl class="dl-horizontal">
        <dt>
            ID (Decimal)
        </dt>

        <dd>
            @Model.ID
        </dd>

        <dt>
            ID (Hex, Big Endian)
        </dt>

        <dd>
            @Model.IDHexBigEndian
        </dd>

        <dt>
            ID (Hex, Little Endian)
        </dt>

        <dd>
            @Model.IDHexLittleEndian
        </dd>

        <dt>
            Dex Number
        </dt>

        <dd>
            @Model.DexNumber
        </dd>

        <dt>
            Category
        </dt>

        <dd>
            @Model.Category
        </dd>

        <dt>
            List Number 1
        </dt>

        <dd>
            @Model.ListNumber1
        </dd>

        <dt>
            List Number 2
        </dt>

        <dd>
            @Model.ListNumber2
        </dd>

        <dt>
            Evolves From
        </dt>

        <dd>
            <a href="@Url.Action("Details", "PsmdMoves", new { id = Model.EvolvesFromEntryID })">@Model.EvolvesFromName</a>
        </dd>

        <dt>
            Ability 1
        </dt>

        <dd>
            <a href="@Url.Action("Details", "PsmdAbilities", new { id = Model.Ability1ID })">@Model.Ability1</a>
        </dd>

        <dt>
            Ability 2
        </dt>

        <dd>
            <a href="@Url.Action("Details", "PsmdAbilities", new { id = Model.Ability2ID })">@Model.Ability2</a>
        </dd>

        <dt>
            Hidden Ability
        </dt>

        <dd>
            <a href="@Url.Action("Details", "PsmdAbilities", new { id = Model.AbilityHiddenID })">@Model.AbilityHidden</a>
        </dd>

        <dt>
            @if (Model.Type2ID > 0 && Model.Type1ID != Model.Type2ID)
            {
                @Html.Raw("Types")
            }
            else
            {
                @Html.Raw("Type")
            }
        </dt>
        <dd>
            <a href="@(Url.Action("Details", "PsmdTypes", new { id = Model.Type1ID}))"><img alt="@Model.Type1" src="https://projectpokemon.org/images/gen7-types/@(Model.Type1).png" /></a>
            @if (Model.Type2ID > 0 && Model.Type1ID != Model.Type2ID)
            {
                <a href="@(Url.Action("Details", "PsmdTypes", new { id = Model.Type2ID}))"><img alt="@Model.Type2" src="https://projectpokemon.org/images/gen7-types/@(Model.Type2).png" /></a>
            }
        </dd>

        <dt>
            Is Mega Evolution
        </dt>

        <dd>
            @Model.IsMegaEvolution
        </dd>

        <dt>
            Min Evolve Level
        </dt>

        <dd>
            @Model.MinEvolveLevel
        </dd>

    </dl>
</div>
<div>
    <h3>Moves (Level Up)</h3>
    <table class="table table-striped table-bordered table-condensed">
        <tr>
            <th>Level</th>
            <th>Move</th>
        </tr>
        @foreach (var item in Model.MovesLevelUp)
        {
            <tr>
                <td>
                    @item.Level
                </td>
                <td>
                    <a href="@(Url.Action("Details", "PsmdMoves", new { id = item.MoveID}))">@item.MoveName</a>
                </td>
            </tr>
        }
    </table>
</div>
<div>
    <h3>Stats</h3>
    <table class="table table-striped table-bordered table-condensed">
        <tr>
            <th>Level</th>
            <th>Experience</th>
            <th>HP</th>
            <th>Attack</th>
            <th>Sp. Attack</th>
            <th>Defense</th>
            <th>Sp. Defense</th>
            <th>Speed</th>
        </tr>
        @foreach (var item in Model.StatLevelUp)
        {
            <tr>
                <td>
                    @(item.Level + 1)
                </td>
                <td>
                    @item.Exp
                </td>
                <td>
                    @string.Format("{0} (+{1})", item.TotalHP, item.AddedHP)
                </td>
                <td>
                    @string.Format("{0} (+{1})", item.TotalAttack, item.AddedAttack)
                </td>
                <td>
                    @string.Format("{0} (+{1})", item.TotalSpAttack, item.AddedSpAttack)
                </td>
                <td>
                    @string.Format("{0} (+{1})", item.TotalDefense, item.AddedDefense)
                </td>
                <td>
                    @string.Format("{0} (+{1})", item.TotalSpDefense, item.AddedSpDefense)
                </td>
                <td>
                    @string.Format("{0} (+{1})", item.TotalSpeed, item.AddedSpeed)
                </td>
            </tr>
        }
    </table>
</div>