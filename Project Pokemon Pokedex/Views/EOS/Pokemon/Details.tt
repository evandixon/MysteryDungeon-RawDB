<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="ProjectPokemon.Pokedex.Models.EOS.Pokemon" name="Model" #>
<p>
	<#= Model.GetCrossReferenceHtml() #>
</p>
<div>
    <h3>Details</h3>
	<div class="pkm-image-inner">
		<div data-role='commentContent' class='ipsType_normal ipsType_richText ipsContained' data-controller='core.front.core.lightboxedImages'>
			<p>
				<img class="ipsImage" src="{galleryImage="<#=Model.DexNumber.ToString().PadLeft(3, '0') #> <#=Model.Name #>/EoS Portrait Normal"}" alt="<#=Model.Name #> Portrait" />
			</p>			
		</div>
	</div>
	<a href="{albumLink="<#=Model.DexNumber.ToString().PadLeft(3, '0') #> <#=Model.Name #>"}">See more images</a>
    <dl class="dl-horizontal">
        <dt>
            ID (Decimal)
        </dt>

        <dd>
            <#= Model.ID #>
        </dd>

        <dt>
            ID (Hex, Big Endian)
        </dt>

        <dd>
            <#= Model.GetIDHexBigEndian() #>
        </dd>

        <dt>
            ID (Hex, Little Endian)
        </dt>

        <dd>
            <#= Model.GetIDHexLittleEndian() #>
        </dd>

        <dt>
            Dex Number
        </dt>

        <dd>
            <#= Model.DexNumber #>
        </dd>


        <dt>
            Evolves From
        </dt>

        <dd>
			<a href='{page="eos-pkm-<#=Model.EvolveFromID #>"}'><#=Model.EvolveFromName #></a>
        </dd>


        <dt>
            Evolution Criteria
        </dt>

        <dd>
            <#= Model.EvolveCriteria #>
        </dd>
    </dl>
</div>

<div class="row">
    <# if (Model.Male != null)
    {
        var gender = Model.Male; #>
        <div class="col-md-6">
            <h3>Male</h3>
            <dl class="dl-horizontal">
                <dt>
                    Base HP
                </dt>

                <dd>
                    <#= gender.BaseHP #>
                </dd>

                <dt>
                    Base Attack
                </dt>

                <dd>
                    <#= gender.BaseATK #>
                </dd>

                <dt>
                    Base Defense
                </dt>

                <dd>
                    <#= gender.BaseDEF #>
                </dd>

                <dt>
                    Base Sp. Attack
                </dt>

                <dd>
                    <#= gender.BaseSPATK #>
                </dd>
                <dt>
                    Base Sp. Defense
                </dt>

                <dd>
                    <#= gender.BaseSPDEF #>
                </dd>
            </dl>
        </div>
    <# }
    if (Model.Female != null)
    {
        var gender = Model.Female; #>
        <div class="col-md-6">
            <h3>Female</h3>
            <dl class="dl-horizontal">
                <dt>
                    Base HP
                </dt>

                <dd>
                    <#= gender.BaseHP #>
                </dd>

                <dt>
                    Base Attack
                </dt>

                <dd>
                    <#= gender.BaseATK #>
                </dd>

                <dt>
                    Base Defense
                </dt>

                <dd>
                    <#= gender.BaseDEF #>
                </dd>

                <dt>
                    Base Sp. Attack
                </dt>

                <dd>
                    <#= gender.BaseSPATK #>
                </dd>
                <dt>
                    Base Sp. Defense
                </dt>

                <dd>
                    <#= gender.BaseSPDEF #>
                </dd>
            </dl>
        </div>
    <# } #>
</div>
<div>
<h3>Moves (Level Up)</h3>
<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>Level</th>
        <th>Move</th>
    </tr>
    <# foreach (var item in Model.LevelupMoves)
    { #>
        <tr>
            <td>
                <#= item.Item1.ToString() #>
            </td>
            <td>
				<a href='{page="eos-move-<#=item.Item2.ID #>"}'><#=item.Item2.Name #></a>
            </td>
        </tr>
    <# } #>
</table>
</div>
<div>
<h3>Moves (TM)</h3>
<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>Move</th>
    </tr>
    <# foreach (var item in Model.TMMoves)
    { #>
        <tr>
            <td>
				<a href='{page="eos-move-<#=item.ID #>"}'><#=item.Name #></a>
            </td>
        </tr>
    <# } #>
</table>
</div>
<div>
<h3>Moves (Egg)</h3>
<table class="table table-striped table-bordered table-condensed">
    <tr>            
        <th>Move</th>
    </tr>
    <# foreach (var item in Model.EggMoves)
    { #>
        <tr>
            <td>
				<a href='{page="eos-move-<#=item.ID #>"}'><#=item.Name #></a>
            </td>
        </tr>
    <# } #>
</table>
</div>
<# var dungeons = Model.GetEoSSpawnableDungeons(); #>
<# if (dungeons.Any()) { #>
<h2>Dungeons</h2>

<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th width="10%">
            ID
        </th>
        <th>
            Name
        </th>
    </tr>

    <# foreach (var item in dungeons)
    {
        var hex = item.ID.ToString("X").PadLeft(4, '0'); #>
        <tr>
            <td>
                <#= item.ID #>
            </td>
            <td>
                <a href='{page="eos-dungeon-<#=item.ID #>"}'><#=item.Name #></a>
            </td>
        </tr>
    <# } #>

</table>
<# } #>